// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model Set {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  pageUrl     String
  status      Status   @default(EMPTY)
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  order       Int      @default(0)

  // userId Int
  // user   User @relation(fields: [userId], references: [id])

  steps Step[]

  // @@unique([userId, title])
  // User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

enum Status {
  EMPTY
  DRAFT
  UNDER_REVIEW
  COMPLETED
}

model Step {
  id           Int      @id @default(autoincrement())
  setId        Int // Внешний ключ на модель Set
  title        String
  description  String?  @db.Text
  order        Int
  elementId    String
  imageUrl     String?
  imageChecked Boolean  @default(false)
  imageHeight  Int?
  imageWidth   Int?
  // pageUrl      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  set Set @relation(fields: [setId], references: [id], onDelete: Cascade)

  @@index([setId])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  username  String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // sets Set[]
  // Set Set[]
}

enum Role {
  ADMIN
  USER
}
