// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model Set {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  status    Status   @default(OPEN)
  steps     Step[] // Добавлена реляция с множеством шагов
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

enum Status {
  OPEN
  STARTED
  CLOSED
}

model Step {
  id           Int      @id @default(autoincrement())
  setId        Int // Внешний ключ на модель Set
  set          Set      @relation(fields: [setId], references: [id])
  title        String
  description  String?  @db.Text
  order        Int
  elementId    String
  imageUrl     String
  imageChecked Boolean
  imageHeight  Int
  imageWidth   Int
  pageUrl      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  username  String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Set Set[]
}

enum Role {
  ADMIN
  TECH
  USER
}
